{
  "$schema": "https://schema.management.azure.com/schemas/2015-01-01/deploymentTemplate.json#",
  "contentVersion": "1.0.0.0",
  "parameters": {
    "environmentName": {
      "type": "string",
      "minLength": 5,
      "maxLength": 15,
      "metadata": {
        "description": "The environment name for your resources"
      }
    },
    "acrAdminUserEnabled": {
      "type": "bool",
      "defaultValue": true,
      "metadata": {
        "description": "Enable admin user that have push / pull permission to the registry."
      }
    },
    "location": {
      "type": "string",
      "defaultValue": "[resourceGroup().location]",
      "metadata": {
        "description": "Location for all resources."
      }
    },
    "acrSku": {
      "type": "string",
      "metadata": {
        "description": "Tier of your Azure Container Registry."
      },
      "defaultValue": "Basic",
      "allowedValues": ["Basic", "Standard", "Premium"]
    },
    "appPlanSku": {
      "type": "string",
      "defaultValue": "F1",
      "allowedValues": [
        "F1",
        "D1",
        "B1",
        "B2",
        "B3",
        "S1",
        "S2",
        "S3",
        "P1",
        "P2",
        "P3",
        "P4"
      ],
      "metadata": {
        "description": "Describes plan's pricing tier and capacity. Check details at https://azure.microsoft.com/en-us/pricing/details/app-service/"
      }
    },
    "websitePort": {
      "type": "int",
      "defaultValue": 4000,
      "metadata": {
        "description": "The default port for a web application, should be the same port exposed by the container"
      }
    }
  },
  "variables": {
    "acrName": "[concat(parameters('environmentName'), 'graphroots', 'acr')]",
    "appPlanName": "[concat(parameters('environmentName'), 'graphroots', uniqueString(resourceGroup().id))]",
    "appServiceName": "[concat(parameters('environmentName'), 'graphroots', 'webapp')]"
  },
  "resources": [
    {
      "name": "[variables('acrName')]",
      "type": "Microsoft.ContainerRegistry/registries",
      "apiVersion": "2017-10-01",
      "location": "[parameters('location')]",
      "comments": "Container registry for storing docker images",
      "tags": {
        "displayName": "Container Registry",
        "container.registry": "[variables('acrName')]"
      },
      "sku": {
        "name": "[parameters('acrSku')]",
        "tier": "[parameters('acrSku')]"
      },
      "properties": {
        "adminUserEnabled": "[parameters('acrAdminUserEnabled')]"
      }
    },
    {
      "name": "[variables('appPlanName')]",
      "type": "Microsoft.Web/serverfarms",
      "kind": "linux",
      "location": "[resourceGroup().location]",
      "apiVersion": "2018-02-01",
      "sku": {
        "name": "[parameters('appPlanSku')]"
      },
      "dependsOn": [],
      "tags": {
        "displayName": "graphrootsplan"
      },
      "properties": {
        "name": "[variables('appPlanName')]",
        "numberOfWorkers": 1,
        "reserved": true
      }
    },
    {
      "name": "[variables('appServiceName')]",
      "type": "Microsoft.Web/sites",
      "kind": "app,linux,container",
      "apiVersion": "2018-02-01",
      "location": "[resourceGroup().location]",
      "dependsOn": [
        "[resourceId('Microsoft.Web/serverfarms', variables('appPlanName'))]"
      ],
      "tags": {
        "[concat('hidden-related:', resourceId('Microsoft.Web/serverfarms', variables('appServiceName')))]": "Resource",
        "displayName": "graphroots"
      },
      "properties": {
        "name": "[variables('appServiceName')]",
        "serverFarmId": "[resourceId('Microsoft.Web/serverfarms', variables('appPlanName'))]",
        "siteConfig": {
          "linuxFxVersion": "DOCKER|nginx",
          "DOCKER_CUSTOM_IMAGE_NAME": "containerwebapp",
          "appSettings": [
            {
              "name": "WEBSITES_PORT",
              "value": "[parameters('websitePort')]"
            },
            {
              "name": "WEBSITES_ENABLE_APP_SERVICE_STORAGE",
              "value": "false"
            }
          ]
        }
      }
    }
  ],
  "outputs": {
    "acrLoginServer": {
      "value": "[reference(resourceId('Microsoft.ContainerRegistry/registries',variables('acrName')),'2017-10-01').loginServer]",
      "type": "string"
    }
  }
}
