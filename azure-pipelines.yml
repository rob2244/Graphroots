trigger:
- master

pool:
  vmImage: 'ubuntu-latest'

steps:
- task: DockerInstaller@0
  displayName: "Install docker cli"
  inputs:
    dockerVersion: '17.09.0-ce'

- task: Docker@2
  displayName: "Build and publish docker images"
  enabled: "false"
  inputs:
    containerRegistry: $(RegistryServiceConnection)
    repository: "graphroots"
    command: 'buildAndPush'
    Dockerfile: '**/Dockerfile'


- task: DockerCompose@0
  inputs:
    containerregistrytype: 'Azure Container Registry'
    azureSubscription: 'Graphroots'
    azureContainerRegistry: '{"loginServer":"roseitzdevgraphrootsacr.azurecr.io", "id" : "/subscriptions/55df4e92-8e3b-49c8-aa81-d12780264814/resourceGroups/graphrootsrg-dev/providers/Microsoft.ContainerRegistry/registries/roseitzdevgraphrootsacr"}'
    dockerComposeFile: '**/docker-compose.yml'
    action: 'Build services'

- task: DockerCompose@0
  inputs:
    containerregistrytype: 'Azure Container Registry'
    azureSubscription: 'Graphroots'
    azureContainerRegistry: '{"loginServer":"roseitzdevgraphrootsacr.azurecr.io", "id" : "/subscriptions/55df4e92-8e3b-49c8-aa81-d12780264814/resourceGroups/graphrootsrg-dev/providers/Microsoft.ContainerRegistry/registries/roseitzdevgraphrootsacr"}'
    dockerComposeFile: '**/docker-compose.yml'
    dockerComposeFileArgs: 'BUILD_ID=$(Build.BuildId)'
    action: 'Push services'

- task: Bash@3
  inputs:
    filePath: '$(Build.SourcesDirectory)/create-config-file.sh'
    workingDirectory: '$(Build.SourcesDirectory)'

- task: CopyFiles@2
  displayName: "Copy Environment Config"
  inputs:
    SourceFolder: '$(Build.SourcesDirectory)'
    Contents: |
     .env
     docker-compose.yml
    TargetFolder: '$(Build.ArtifactStagingDirectory)'

- task: CopyFiles@2
  displayName: "Copy deployment scripts to artifact staging"
  inputs:
    SourceFolder: '$(Build.SourcesDirectory)/AzureDeploy'
    Contents: '**'
    TargetFolder: '$(Build.ArtifactStagingDirectory)/AzureDeploy'

- task: PublishBuildArtifacts@1
  displayName: "Publish build artifacts"
  inputs:
    PathtoPublish: '$(Build.ArtifactStagingDirectory)'
    ArtifactName: 'drop'
    publishLocation: 'Container'

